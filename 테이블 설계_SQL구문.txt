CREATE TABLE user (
    user_id VARCHAR(100) PRIMARY KEY,
    password VARCHAR(100) NOT NULL,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL,
    phone_num VARCHAR(20) NOT NULL
);

CREATE TABLE host (
    host_id VARCHAR(100) PRIMARY KEY,
    password VARCHAR(100) NOT NULL,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL,
    phone_num VARCHAR(20) NOT NULL
);

CREATE TABLE room (
    room_id INT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    location VARCHAR(100),
    host_id VARCHAR(100) NOT NULL,
    room_size INT NOT NULL,
    room_price INT NOT NULL,
    room_shape VARCHAR(50),
    FOREIGN KEY (host_id) REFERENCES host(host_id)
);

CREATE TABLE contract (
    contract_id INT PRIMARY KEY,
    user_id VARCHAR(100) NOT NULL,
    host_id VARCHAR(100) NOT NULL,
    contract_date DATE NOT NULL,
    price INT NOT NULL,
    duration INT NOT NULL,
    start_time DATETIME NOT NULL,
    end_time DATETIME NOT NULL,
    FOREIGN KEY (user_id) REFERENCES user(user_id),
    FOREIGN KEY (host_id) REFERENCES host(host_id),
    CONSTRAINT UQ_contract_user UNIQUE (user_id),
    CONSTRAINT UQ_contract_host UNIQUE (host_id)
);

CREATE TABLE bill (
    bill_id INT PRIMARY KEY,
    date DATE NOT NULL,
    price INT NOT NULL,
    user_id VARCHAR(100) NOT NULL,
    contract_id INT UNIQUE,
    status VARCHAR(20) NOT NULL,
    pay_method VARCHAR(50) NOT NULL,
    FOREIGN KEY (user_id) REFERENCES user(user_id),
    FOREIGN KEY (contract_id) REFERENCES contract(contract_id)
);

CREATE TABLE message (
    message_id INT PRIMARY KEY,
    user_id VARCHAR(100) NOT NULL,
    host_id VARCHAR(100) NOT NULL,
    content VARCHAR(1000) NOT NULL,
    message_time DATETIME NOT NULL,
    FOREIGN KEY (user_id) REFERENCES user(user_id),
    FOREIGN KEY (host_id) REFERENCES host(host_id)
);

CREATE TABLE review (
    review_id INT PRIMARY KEY,
    user_id VARCHAR(100) NOT NULL,
    room_id INT NOT NULL,
    content TEXT NOT NULL,
    date DATE NOT NULL,
    FOREIGN KEY (user_id) REFERENCES user(user_id),
    FOREIGN KEY (room_id) REFERENCES room(room_id)
);
